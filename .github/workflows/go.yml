name: Build and Test
on: [push, pull_request]
jobs:
  build:
    name: Go CI
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install mage
        run: "pushd /tmp; git clone https://github.com/magefile/mage; pushd mage; go run bootstrap.go; popd; popd"

      - name: Install golangci-lint
        run: | 
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.44.0
          golangci-lint --version

      - name: Install Protobuf compiler
        uses: arduino/setup-protoc@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Protobuf Go plugin
        run: go get github.com/golang/protobuf/protoc-gen-go

      - name: Install Buf compiler
        env:
          BUF_VERSION: "0.20.1"
          BUF: "/var/tmp/buf"
        run: |
          UNAME_OS=$(uname -s)
          UNAME_ARCH=$(uname -m)

          wget "https://github.com/bufbuild/buf/releases/download/v${BUF_VERSION}/buf-${UNAME_OS}-${UNAME_ARCH}" -O ${BUF}
          chmod +x ${BUF}

      - name: Run Buf checks
        env:
          BUF: "/var/tmp/buf"
        run: mage -v buf

      - name: Build
        run: |
          mage -v build

      - name: Run golangci-lint
        run: |
          mage -v lint

      - name: Test (with -race flag)
        run: mage -v testracecover

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
